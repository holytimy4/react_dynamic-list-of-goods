{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","className","map","good","classNames","blue","color","red","green","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","prod","App","useState","setGoods","isLoadingError","setIsLoadingError","loadGoods","getGoods","products","style","width","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"mRASaA,EAA6BC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OACnD,oBAAIC,UAAU,iBAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRF,UAAWG,IAAW,CACpBC,KAAqB,SAAfF,EAAKG,MACXC,IAAoB,QAAfJ,EAAKG,MACVE,MAAsB,UAAfL,EAAKG,QANhB,SASGH,EAAKM,MARDN,EAAKO,YCRX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAb,GAAK,OAAIA,EACZiB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAET,KAAKW,cAAcD,EAAEV,SACtCY,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAb,GAAK,OAAIA,EAAMuB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKlB,aCXhCmB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAA4CD,oBAAS,GAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KACMC,EAAS,uCAAG,WAAOC,GAAP,eAAAb,EAAA,+EAESa,IAFT,OAERC,EAFQ,OAIdL,EAASK,GAJK,gDAMdH,GAAkB,GANJ,yDAAH,sDAcf,OACE,sBAAK5B,UAAU,gBAAgBgC,MAAO,CAAEC,MAAO,SAA/C,UACE,oBAAIjC,UAAU,iBAAd,mCAEA,wBACEA,UAAU,wCACVkC,KAAK,SACL,UAAQ,aACRC,QAZiB,kBAAMN,EAAUnB,IAQnC,4BASA,wBACEV,UAAU,wCACVkC,KAAK,SACL,UAAQ,oBACRC,QApBoB,kBAAMN,EAAUd,IAgBtC,gCASA,wBACEf,UAAU,0CACVkC,KAAK,SACL,UAAQ,aACRC,QA5BiB,kBAAMN,EAAUR,IAwBnC,4BASCM,EAEG,qBAAK3B,UAAU,6BAAf,SACE,mBAAGA,UAAU,eAAb,mCAGF,cAACJ,EAAD,CAAWG,MAAOA,QC3D5BqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b08107db.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.min.css';\nimport classNames from 'classnames';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul className=\"my-3 is-size-5\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={classNames({\n          blue: good.color === 'blue',\n          red: good.color === 'red',\n          green: good.color === 'green',\n        })}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(prod => prod.color === 'red')); // get only red\n};","import React, { useState } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n  const loadGoods = async (getGoods: () => Promise<Good[]>) => {\n    try {\n      const products = await getGoods();\n\n      setGoods(products);\n    } catch (error) {\n      setIsLoadingError(true);\n    }\n  };\n\n  const handleAllGoods = () => loadGoods(getAll);\n  const handle5FirstGoods = () => loadGoods(get5First);\n  const handleRedGoods = () => loadGoods(getRedGoods);\n\n  return (\n    <div className=\"App block p-5\" style={{ width: '550px' }}>\n      <h1 className=\"is-size-2 px-5\">Dynamic list of Goods</h1>\n\n      <button\n        className=\"button is-rounded is-outlined is-info\"\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleAllGoods}\n      >\n        Load all goods\n      </button>\n\n      <button\n        className=\"button is-rounded is-outlined is-info\"\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handle5FirstGoods}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        className=\"button is-rounded is-outlined is-danger\"\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleRedGoods}\n      >\n        Load red goods\n      </button>\n\n      {isLoadingError\n        ? (\n          <div className=\"message p-2 my-4 is-danger\">\n            <p className=\"message-body\">Error loading goods</p>\n          </div>\n        )\n        : <GoodsList goods={goods} />}\n    </div>\n  );\n};","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}